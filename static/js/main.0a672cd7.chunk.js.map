{"version":3,"sources":["components/Valikko.js","components/Laskuri.js","components/Bitcoin.js","components/Saastovinkit.js","App.js","index.js"],"names":["useStyles","makeStyles","palkki","marginTop","marginBottom","background","tabs","fontSize","Valikko","tyylit","React","useState","value","setValue","Paper","className","Tabs","TabIndicatorProps","style","onChange","event","newValue","centered","Tab","component","Link","to","label","tekstikentta","margin","width","Laskuri","props","saastot","setSaastot","kuukaudessa","setKuukaudessa","aika","setAika","tuotto","setTuotto","aikaApu","setAikaApu","yhteensa","setYhteensa","laskeYhteensa","a","yhteensaApu","vuosiTuottoProsenteistaApu","i","console","log","Math","round","asetaTavoitesumma","Container","Typography","textAlign","display","TextField","variant","defaultValue","type","InputProps","endAdornment","InputAdornment","position","e","Number","target","replace","justifyContent","alignItems","Button","color","aria-label","startIcon","onClick","marginLeft","marginRight","displayType","thousandSeparator","decimalSeparator","Bitcoin","luku","data","bpi","EUR","rate","toFixed","isNumericString","Saastovinkit","annettuVinkki","setAnnettuVinkki","id","uuid","teksti","vinkit","setVinkit","useEffect","avaaVinkitlista","Object","entries","JSON","parse","localStorage","getItem","length","setItem","stringify","tavoite","List","map","vinkki","idx","ListItem","ListItemText","primary","ListItemIcon","IconButton","edge","listaApu","filter","poisto","onSubmit","preventDefault","uusiVinkki","fullWidth","multiline","rows","disabled","App","setData","haeTiedot","fetch","yhteys","json","tiedot","setTavoite","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0a672cd7.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n  palkki: {\r\n    marginTop:\"30px\",\r\n    marginBottom: \"30px\",\r\n    background: 'linear-gradient(45deg, #00cc99 30%, #009999 90%)',\r\n  },\r\n  tabs : {\r\n    fontSize: \"20px\",\r\n  }\r\n});\r\n\r\nfunction Valikko() {\r\n  const tyylit = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Paper className={tyylit.palkki}>\r\n      <Tabs\r\n        TabIndicatorProps={{style: {background:\"#001a1a\"}}}\r\n        value={value}\r\n        onChange={handleChange}\r\n        centered\r\n      >\r\n        <Tab component={Link} to=\"/laskuri\" className={tyylit.tabs} label=\"Laskuri\" />\r\n        <Tab component={Link} to=\"/bitcoin\" className={tyylit.tabs} label=\"Bitcoin\" />\r\n        <Tab component={Link} to=\"/saastovinkit\" className={tyylit.tabs} label=\"Säästövinkit\" />\r\n      </Tabs>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Valikko;","import { Container, Typography, TextField, InputAdornment, Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useState } from 'react';\r\nimport  ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport  ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nconst useStyles = makeStyles({ //Hook useStyles-tyylikokonaisuus App-komponentin ulkoupuolelle\r\n    tekstikentta : {              //class\r\n                    margin:\"auto\",\r\n                    \"& input::-webkit-outer-spin-button, & input::-webkit-inner-spin-button\": {\r\n                        \"-webkit-appearance\": \"none\",}, //https://stackoverflow.com/questions/55952086/writing-css-in-js-code-to-remove-arrow-buttons-from-textfield\r\n                    width:\"170px\"\r\n                    }\r\n  });\r\n\r\nfunction Laskuri (props) {\r\n\r\n    const tyylit = useStyles(); //UI Meterialsissa classes\r\n\r\n    const [saastot, setSaastot] = useState(10000);\r\n    const [kuukaudessa, setKuukaudessa] = useState(100);\r\n    const [aika, setAika] = useState(10);\r\n    const [tuotto, setTuotto] = useState(7);\r\n    const [aikaApu,setAikaApu] = useState(\"\");\r\n\r\n    const vahennaVuosi = () => {\r\n        setAika(aika-1)\r\n    }\r\n\r\n    const lisaaVuosi = () => {\r\n        setAika(aika+1)\r\n    }\r\n\r\n    const [yhteensa, setYhteensa] = useState(0);\r\n\r\n    const laskeYhteensa = async () => {\r\n\r\n        let yhteensaApu = saastot\r\n        let vuosiTuottoProsenteistaApu = (tuotto / 100)\r\n\r\n        for (var i=0; i < aika; i++){\r\n            yhteensaApu = (yhteensaApu + (12*kuukaudessa))*(1+vuosiTuottoProsenteistaApu)\r\n            console.log(\"Vuoden \" + (i+1) + \" jälkeen summa on: \" + yhteensaApu)\r\n        }\r\n\r\n        setAikaApu(aika);\r\n        setYhteensa(Math.round(yhteensaApu));\r\n        props.asetaTavoitesumma(yhteensaApu); //lähetetään App:lle tieto, paljon yhteensa on\r\n    }\r\n\r\nreturn (\r\n\r\n<Container>\r\n\r\n    <Typography style={{\r\n                        textAlign:\"center\",\r\n                        fontSize:\"20px\"\r\n    }}\r\n    > Säästölaskuri </Typography>\r\n\r\n    <Typography style={{\r\n                        marginTop:\"20px\",\r\n                        marginBottom: \"30px\",\r\n                        textAlign:\"center\",\r\n    }}\r\n    > Laskurilla voit kokeilla, miten erilaiset säästösummat, \r\n    aika ja tuotto-oletus vaikuttavat säästöjen kertymiseen. </Typography>\r\n\r\n    <div style={{\r\n        display: \"flex\",\r\n        marginBottom: \"20px\"\r\n    }\r\n    }>\r\n\r\n        <TextField \r\n            variant=\"outlined\"\r\n            label=\"Ennakkosäästöt\"\r\n            defaultValue={saastot}\r\n            type=\"number\"\r\n            InputProps={{\r\n                endAdornment: <InputAdornment position=\"end\">€</InputAdornment>,\r\n              }}\r\n            className={tyylit.tekstikentta}\r\n            onChange={ (e) => { setSaastot(Number((e.target.value).replace(\",\",\".\"))) } }\r\n        />\r\n    </div>\r\n\r\n    <div style={{\r\n        display: \"flex\",\r\n        marginBottom: \"20px\"\r\n    }\r\n    }>\r\n\r\n        <TextField \r\n            variant=\"outlined\"\r\n            label=\"Kuukausisäästösumma\"\r\n            defaultValue={kuukaudessa}\r\n            type=\"number\"\r\n            InputProps={{\r\n                endAdornment: <InputAdornment position=\"end\">€</InputAdornment>,\r\n              }}\r\n            className={tyylit.tekstikentta}\r\n            onChange={ (e) => { setKuukaudessa(Number((e.target.value).replace(\",\",\".\"))) } }\r\n        />\r\n\r\n    </div>\r\n\r\n    <div style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        marginBottom: \"20px\",\r\n    }\r\n    }>\r\n\r\n        <Button \r\n                color=\"primary\" aria-label=\"upload picture\"\r\n                startIcon={<ArrowDownwardIcon />}\r\n                onClick={vahennaVuosi}\r\n        >\r\n        </Button>\r\n\r\n\r\n        <TextField style={{\r\n                            marginLeft: \"0\",\r\n                            marginRight:\"0\"\r\n        }}\r\n            variant=\"outlined\"\r\n            label=\"Säästöaika\"\r\n            value={aika}\r\n            type=\"number\"\r\n            InputProps={{\r\n                endAdornment: <InputAdornment position=\"end\">vuotta</InputAdornment>,\r\n              }}\r\n            className={tyylit.tekstikentta}\r\n            onChange={ (e) => { setAika(Number((e.target.value).replace(\",\",\".\"))) } }\r\n        />\r\n\r\n        <Button \r\n                color=\"primary\" aria-label=\"upload picture\"\r\n                startIcon={<ArrowUpwardIcon />}\r\n                onClick={lisaaVuosi}\r\n        >\r\n        </Button>\r\n\r\n    </div>\r\n\r\n    <div style={{\r\n        display: \"flex\",\r\n        marginTop: \"20px\",\r\n        marginBottom: \"20px\"\r\n    }\r\n    }>\r\n\r\n        <TextField \r\n            variant=\"outlined\"\r\n            label=\"Tuotto-odotus\"\r\n            defaultValue={tuotto}\r\n            className={tyylit.tekstikentta}\r\n            type=\"number\"\r\n            InputProps={{\r\n                endAdornment: <InputAdornment position=\"end\">%</InputAdornment>,\r\n              }}\r\n            onChange={ (e) => { setTuotto(Number((e.target.value).replace(\",\",\".\"))) } }\r\n        />\r\n\r\n    </div>\r\n\r\n    <div style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\"}}\r\n    >\r\n        <Button \r\n                style={{\r\n                    width:\"150px\"\r\n                }}\r\n                variant=\"contained\" \r\n                color=\"primary\"\r\n                onClick={laskeYhteensa}\r\n            >\r\n                    Laske\r\n        </Button>\r\n    </div>\r\n\r\n\r\n        {(yhteensa)\r\n            ?<Typography style={{\r\n                                marginTop: \"30px\",\r\n                                textAlign: \"center\",\r\n                                fontSize: \"20px\",\r\n                                color: \"#008080\"\r\n            }}\r\n            > Säästetty summa {aikaApu} vuoden aikana on <NumberFormat displayType={'text'} value={yhteensa} thousandSeparator={' '} decimalSeparator={','}/> €.</Typography> \r\n            //tässä käytetään aikaApu muuttujaa, jottei aika muutu tässä, jos käyttäjä klikkailee ArrowUp tai ArrowDown\r\n            // number format https://www.npmjs.com/package/react-number-format\r\n\r\n            : null\r\n        }\r\n\r\n\r\n</Container>\r\n\r\n)\r\n}\r\nexport default Laskuri;","import { Container, Typography } from '@material-ui/core';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nfunction Bitcoin (props) {\r\n\r\n    let luku= props.data.bpi.EUR.rate\r\n\r\n    luku = luku.replace(\",\" , \"\")\r\n\r\n    luku = Number(luku).toFixed(2)\r\n\r\n    return (\r\n\r\n//https://www.npmjs.com/package/react-number-format\r\n<Container>\r\n    \r\n    <Typography style={{\r\n                        textAlign: \"center\",\r\n                        fontSize: \"20px\"\r\n    }}>\r\n        Bitcoinin arvo tällä hetkellä <NumberFormat isNumericString={true} displayType={'text'} value={luku} thousandSeparator={' '} decimalSeparator={','}/> €.\r\n    </Typography>\r\n\r\n</Container>\r\n    \r\n)\r\n}\r\nexport default Bitcoin;","import { Container, Typography, TextField, Button , List, ListItem, ListItemText, ListItemIcon, IconButton } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { useState, useEffect } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({ //Hook useStyles-tyylikokonaisuus App-komponentin ulkoupuolelle\r\n    tekstikentta : {              //class\r\n                    marginBottom: \"10px\",\r\n                    marginTop:    \"5px\"\r\n                  }\r\n  });\r\n\r\nfunction Saastovinkit (props) {\r\n\r\n    const tyylit = useStyles(); //UI Meterialsissa classes\r\n\r\n    const [annettuVinkki,setAnnettuVinkki] = useState(\"\");\r\n\r\n    const [vinkit, setVinkit] = useState([\r\n                                    { \r\n                                        id : uuid(),\r\n                                        teksti: \"Selvitä, mihin sinulla kuluu rahaa\"\r\n                                    },  \r\n                                    { \r\n                                        id : uuid(),\r\n                                        teksti: \"Budjetoi ja pysy myös budjetissa\"\r\n                                    },\r\n                                    { \r\n                                        id : uuid(),\r\n                                        teksti: \"Vertaa hintoja\"\r\n                                    },\r\n                                    { \r\n                                        id : uuid(),\r\n                                        teksti: \"Kilpailuta\"\r\n                                    },\r\n      ]);\r\n\r\n    useEffect(() => { //kun käynnistetään tai päivitetään app niin tuodaan \r\n        avaaVinkitlista(); \r\n      }, []); //array on tyhjä, eli useEffect-hook ajetaan vain kerran eli kun app käynnistetään tai päivitetään. \r\n                // useEffect käynnistyy aina kun tilamuuttuja [] muuttuu \r\n                // -> jos se on tyhjä, se ei voi muuttua enää.\r\n  \r\n    const avaaVinkitlista = () => {\r\n        if (Object.entries(JSON.parse(localStorage.getItem(\"vinkitlista\"))).length > 0) {\r\n            //katsotaan, että onko muistissa vinkitlistalla jo objekteja. mikäli ei, eli lenght on 0, \r\n            // käytetään valmista listaa sellaisenaan\r\n            setVinkit(JSON.parse(localStorage.getItem(\"vinkitlista\")));\r\n            //mikäli objekteja on, eli lenght on >0, asetetaan nämä objektit vinkit-arrayhin\r\n        }\r\n    }\r\n  \r\n    useEffect(() => { //tallennetaan tiedot aina localStorageen kun linnut-tilamuuttuja muuttuu.\r\n        localStorage.setItem(\"vinkitlista\", JSON.stringify(vinkit)); //JSON.stringify() muuttaa string-muotoon JSON objektin, key= \"vinkitlista\" ja value vinkit-array. \r\n    }, [vinkit]); \r\n\r\n    const formHandler = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        let uusiVinkki = {\r\n                            id: uuid(),\r\n                            teksti: annettuVinkki\r\n                        }\r\n\r\n         setVinkit([...vinkit, uusiVinkki])\r\n         setAnnettuVinkki(\"\") // tyhjennetään muuttuja, jotta tekstikenttä tyhjenee\r\n        \r\n        }\r\n\r\n    const poisto = (id) => {\r\n\r\n        let listaApu = vinkit.filter((vinkki) => {\r\n            return (vinkki.id !== id); \r\n        })\r\n\r\n        setVinkit([...listaApu]);\r\n    }\r\n    \r\n        \r\n\r\n    return(\r\n\r\n        <Container>\r\n\r\n            <Typography style={{\r\n                                textAlign:\"center\",\r\n                                fontSize:\"23px\",\r\n                                marginBottom:\"10px\"\r\n            }}\r\n            > Hienoa, että olet päättänyt ryhtyä säästämään! </Typography>\r\n\r\n            {(props.tavoite)\r\n                ?   <Typography style={{\r\n                                        textAlign:\"center\",\r\n                                        fontSize:\"23px\",\r\n                                        marginBottom:\"20px\"\r\n                                        }}\r\n                    > {(props.tavoite).toFixed(0)} euroa on hieno tavoite.</Typography>\r\n\r\n                : null\r\n            }\r\n\r\n            <Typography style={{\r\n                                textAlign:\"center\",\r\n                                fontSize:\"17px\"\r\n            }}\r\n            > Tässä muutamia säästövinkkejä tavoitteesi saavuttamiseksi. </Typography>\r\n\r\n            <Typography style={{\r\n                                textAlign:\"center\",\r\n                                fontSize:\"17px\"\r\n            }}\r\n            > Voit myös lisätä omia vinkkejä tulevaisuutta varten... </Typography>\r\n\r\n            <List>\r\n                { vinkit.map( ( vinkki, idx ) => {\r\n\r\n                    return (\r\n                        <ListItem key={idx}>\r\n                            <ListItemText\r\n                                primary={idx+1 + \". \" + vinkki.teksti}/>\r\n                        <ListItemIcon>\r\n                        <IconButton \r\n                            edge=\"end\"\r\n                            onClick={() => {poisto(vinkki.id)}}\r\n                        >\r\n                        <DeleteIcon />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                    </ListItem>\r\n                    )\r\n                    }\r\n                )}\r\n            </List>\r\n\r\n            <form onSubmit={formHandler}>\r\n\r\n            <div style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\"\r\n                    }}\r\n            >\r\n\r\n                <TextField \r\n                    variant=\"outlined\"\r\n                    label=\"Vinkki\"\r\n                    value={annettuVinkki}\r\n                    className={tyylit.tekstikentta}\r\n                    fullWidth={true}\r\n                    multiline={true}\r\n                    rows={3}\r\n                    onChange={ (e) => { setAnnettuVinkki(e.target.value) } }\r\n                />\r\n\r\n            </div>\r\n\r\n            <div style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\"}}\r\n            >\r\n                <Button \r\n                        type=\"submit\" //button submittaa eli lähettää lomakkeen ja käynnistää formHandler-funktion\r\n                        style={{\r\n                            width:\"150px\"\r\n                        }}\r\n                        variant=\"contained\" \r\n                        color=\"primary\"\r\n                        disabled={!annettuVinkki} // nappia voi painaa vasta, vinkki on annettu\r\n                    >\r\n                            Lisää\r\n                </Button>\r\n            </div>\r\n\r\n            </form>\r\n\r\n        </Container>\r\n    )\r\n}\r\nexport default Saastovinkit;","import {BrowserRouter as Router, Route} from 'react-router-dom';\nimport { Container } from '@material-ui/core';\nimport { useState, useEffect } from 'react';\nimport Valikko from './components/Valikko';\nimport Laskuri from './components/Laskuri';\nimport Bitcoin from './components/Bitcoin';\nimport Saastovinkit from './components/Saastovinkit';\n\n\nfunction App() {\n\n  const [data, setData] = useState([]);\n\nconst haeTiedot = async () => {\n\n  const yhteys = await fetch(\"https://api.coindesk.com/v1/bpi/currentprice.json\");\n  const tiedot = await yhteys.json();\n\n  setData(tiedot)\n}\n\n  useEffect(() => {\n\n    haeTiedot();\n    \n  }, [])\n\n  const [tavoite, setTavoite] = useState(0); //tuodaan  tavoite Laskuri.js:stä ja viedään Saastovinkit.js:ään\n\n  const asetaTavoitesumma = (luku) =>{\n      setTavoite(luku)\n  }\n\n\n  return (\n    <Router>\n      <Container>\n\n      <Valikko/>\n\n      <Route path=\"/laskuri\">\n        <Laskuri asetaTavoitesumma={asetaTavoitesumma}/>\n      </Route>\n      \n      <Route path=\"/bitcoin\">\n        <Bitcoin data={data}/>\n      </Route>\n\n      <Route path=\"/saastovinkit\">\n        <Saastovinkit tavoite={tavoite}/>\n      </Route>\n\n      </Container>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport '@fontsource/roboto';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}